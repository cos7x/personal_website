{
  "hash": "33066d85e4bd81c5fe5f8b1f74b7b1fc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntittle: \"The 'pqnumber' Calculator\"\n---\n\n\nThis project is about a 'pqnumber' Calculator.\n\nTo simulate how the computer handle the computation with large floating point numbers we define pqnumber objects to keep large numbers. This object should have four integer components. The first one is either +1 or âˆ’1. It gives the sign of the number. The second and third are p and\nq. And the fourth component is an integer vector of p + q + 1 integers between zero and nine. For example, we can use the following object x to keep the number 87654.321.\n\nx <- structure(list(sign = 1, p = 3, q = 4, nums = 1:8), class = \"pqnumber\")\n\np = 3 and q = 4 with nums = 1:8 has the decimal value:\n0.001 + 0.02 + 0.3 + 4 + 50 + 600 + 7000 + 80000 = 87654.321\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na <- pqnumber(1,3,4,1:8)\nb <- pqnumber(1,6,0,c(3,9,5,1,4,1,3))\nc <- pqnumber(-1,5,1,c(2,8,2,8,1,7,2))\nis_pqnumber(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nis_pqnumber(b)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nis_pqnumber(c)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(a,DEC = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87654.321\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(b,DEC = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.141593\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(c,DEC = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -27.18282\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(c,DEC = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 5 \nq = 1 \nnums = 2 8 2 8 1 7 2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#as_pqnumber(87654.321,3,3)\n\nas_pqnumber(3.14159265358,11,0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 11 \nq = 0 \nnums = 8 5 3 5 6 2 9 5 1 4 1 3 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(-27.18282,5,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 5 \nq = 1 \nnums = 2 8 2 8 1 7 2 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(0.1234,4,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 4 \nq = 2 \nnums = 4 3 2 1 0 0 0 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(1000,2,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 2 \nq = 3 \nnums = 0 0 0 0 0 1 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(1000,0,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 0 \nq = 3 \nnums = 0 0 0 1 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(3.145,2,0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 2 \nq = 0 \nnums = 4 1 3 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(12345,0,4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 0 \nq = 4 \nnums = 5 4 3 2 1 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(123.001,4,4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 4 \nq = 4 \nnums = 0 1 0 0 3 2 1 0 0 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_pqnumber(123.001,2,4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 2 \nq = 4 \nnums = 0 0 3 2 1 0 0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- pqnumber(-1,1,0,c(3,4))\nn <- pqnumber(1,0,1,c(6,9))\nl <- pqnumber(-1,0,1,c(6,9))\no <- pqnumber(1,1,0,c(3,4))\nadd(n,m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 1 \nq = 1 \nnums = 7 1 9 \n```\n\n\n:::\n\n```{.r .cell-code}\nadd(n,o)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 1 \nq = 2 \nnums = 3 0 0 1 \n```\n\n\n:::\n\n```{.r .cell-code}\nadd(pqnumber(1,0,0,0),m) # 0 - 4.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 1 \nq = 0 \nnums = 3 4 \n```\n\n\n:::\n\n```{.r .cell-code}\nadd(pqnumber(1,1,0,c(1,0)),pqnumber(1,1,0,c(1,0))) # 0.1 + 0.1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 1 \nq = 0 \nnums = 2 0 \n```\n\n\n:::\n\n```{.r .cell-code}\nsubtract(m,l)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 1 \nq = 1 \nnums = 7 1 9 \n```\n\n\n:::\n\n```{.r .cell-code}\nsubtract(l,m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 1 \nq = 1 \nnums = 7 1 9 \n```\n\n\n:::\n\n```{.r .cell-code}\nsubtract(m,n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 1 \nq = 2 \nnums = 3 0 0 1 \n```\n\n\n:::\n\n```{.r .cell-code}\nsubtract(pqnumber(1,0,0,2),pqnumber(1,0,0,2)) # 2 - 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 0 \nq = 0 \nnums = 0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- pqnumber(1,1,1,c(5,4,1)) # 14.5\ny <- pqnumber(1,1,3,c(3,6,1,1,1)) # 1116.3\nas_numeric(multiply(x,y)) # 14.5 * 1116.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16186.35\n```\n\n\n:::\n\n```{.r .cell-code}\nas_numeric(multiply(pqnumber(1,0,3,c(0,0,0,1)),m)) # 1000 * -4.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -4300\n```\n\n\n:::\n\n```{.r .cell-code}\nmultiply(pqnumber(1,2,0,c(1,0,0)),m) # 0.01 * -4.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 3 \nq = 0 \nnums = 3 4 0 0 \n```\n\n\n:::\n\n```{.r .cell-code}\nmultiply(m,pqnumber(1,1,0,c(1,0))) # -4.3 * 0.1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = -1 \np = 2 \nq = 0 \nnums = 3 4 0 \n```\n\n\n:::\n\n```{.r .cell-code}\nas_numeric(multiply(pqnumber(1,1,0,c(1,0)),pqnumber(1,2,0,c(1,0,0))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.001\n```\n\n\n:::\n\n```{.r .cell-code}\nmultiply(pqnumber(1,0,2,c(0,0,2)),pqnumber(1,0,2,c(0,0,3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsign = 1 \np = 0 \nq = 4 \nnums = 0 0 0 0 6 \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}