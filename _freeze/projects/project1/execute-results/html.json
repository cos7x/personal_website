{
  "hash": "7d9f22b9d6e4b34bf9d76573290e0864",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Analysis of California Fiscal Health in 2019\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n载入程序包：'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(reshape2)\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n载入程序包：'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:reshape2':\n\n    smiths\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n载入程序包：'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\nfin_2019 <- read_csv(\"fin_2019.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 423 Columns: 68\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (12): City_Name, Overall_Risk, General_Fund_Reserves_Risk, Debt_Burden_R...\ndbl (56): Longitude, Latitude, Overall_Rank, General_Fund_Reserves_Rank, Deb...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nfin_2019 <- fin_2019[fin_2019$Overall_Points != 0, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- function(column) {\n  mean_val <- mean(column, na.rm = TRUE)\n  median_val <- median(column, na.rm = TRUE)\n  lower_bound <- quantile(column, 0.25, na.rm = TRUE)\n  upper_bound <- quantile(column, 0.75, na.rm = TRUE)\n  return(c(mean = mean_val, median = median_val, lower_bound = lower_bound, upper_bound = upper_bound))\n}\n\nsummary_stats(fin_2019$Overall_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       71.38969        72.26000        60.76250        83.85250 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$General_Fund_Reserves_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       18.91024        18.71500        11.75000        30.00000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$Debt_Burden_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       11.89289        13.24000        10.25000        15.00000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$Liquidity_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       9.340284       10.000000       10.000000       10.000000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$Pension_Obligations_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       6.873934        7.520000        4.720000        9.600000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$OPEB_Funding_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       2.061137        1.600000        0.000000        4.625000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$Pension_Costs_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       3.247583        3.330000        2.500000        4.170000 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats(fin_2019$Future_Pension_Costs_Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean          median lower_bound.25% upper_bound.75% \n       2.556801        2.780000        1.670000        3.610000 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divide into 3 regions\nfin_2019$Region <- with(fin_2019, ifelse(\n  Latitude >= 38, \"North\",\n  ifelse(Latitude >= 35 & Latitude < 38, \"Central\", \"South\")\n))\nfin_2019$Region <- factor(fin_2019$Region, levels = c(\"North\", \"Central\", \"South\"))\nregion_means <- fin_2019 %>%\n  group_by(Region) %>%\n  summarise(mean_overall_points = mean(Overall_Points, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfin_2019 <- fin_2019 %>%\n  mutate(\n    Risk_Level = case_when(\n      Overall_Risk == \"High\" ~ \"High\",\n      Overall_Risk == \"Moderate\" ~ \"Moderate\",\n      Overall_Risk == \"Low\" ~ \"Low\",\n      TRUE ~ NA_character_\n    ),\n    Risk_Level = factor(Risk_Level, levels = c(\"High\", \"Moderate\", \"Low\"))\n  ) %>%\n  filter(!is.na(Risk_Level))\n\n\ncalifornia_map <- map_data(\"state\") %>% filter(region == \"california\")\n\ndensity_plot <- ggplot(fin_2019, aes(x = Longitude, y = Latitude)) +\n  geom_polygon(data = california_map, aes(x = long, y = lat, group = group),\n               fill = \"lightgray\", color = \"black\") + \n  stat_density2d(aes(fill = after_stat(level)), geom = \"polygon\", alpha = 0.5) +\n  scale_fill_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Density of High-Risk Cities by Risk Level in 2019\",\n       x = \"Longitude\", y = \"Latitude\") +\n  theme_minimal() +\n  facet_wrap(~Risk_Level) +\n  theme(\n    #panel.background = element_rect(fill = \"white\", color = NA),\n    #plot.background = element_rect(fill = \"white\", color = NA),\n    #strip.text = element_text(size = 12, face = \"bold\")\n  )\n\ndensity_plot\n```\n\n::: {.cell-output-display}\n![](project1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_plot <- ggplot(fin_2019, aes(x = Region, y = Overall_Points, fill = Region)) +\n  geom_boxplot(outlier.color = \"red\", outlier.size = 2) +\n  geom_line(data = region_means, aes(x = Region, y = mean_overall_points, group = 1), \n            color = \"pink\", size = 1) +\n  geom_point(data = region_means, aes(x = Region, y = mean_overall_points), \n             color = \"pink\", size = 3) +\n  labs(title = \"Overall Points by Region with Mean Line\",\n       x = \"Region\",\n       y = \"Overall Points\") +\n  theme_minimal(base_size = 14) +\n  scale_fill_manual(values = c(\"skyblue\", \"lightgreen\", \"orange\")) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\n#ggsave(\"Boxplot_of_Overall_Points_by_Region.png\", plot = box_plot, width = 8, height = 6)\nbox_plot\n```\n\n::: {.cell-output-display}\n![](project1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nregion_means <- fin_2019 %>%\n  group_by(Region) %>%\n  summarise(across(c(General_Fund_Reserves_Points, Pension_Obligations_Points,\n                     Debt_Burden_Points, OPEB_Funding_Points, Future_Pension_Costs_Points,\n                     Liquidity_Points, Pension_Costs_Points), mean, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(...)`.\nℹ In group 1: `Region = North`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n\n\n:::\n\n```{.r .cell-code}\nlong_data <- melt(region_means, id.vars = \"Region\")\n\nbar_chart <- ggplot(long_data, aes(x = Region, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Comparison of Scores by Region\",\n       x = \"Region\", y = \"Average Points\") +\n  theme_minimal()\n#ggsave(\"Bar_Chart_of_Regional_Average_Scores_by_Indicator.png\", plot = bar_chart, width = 8, height = 6)\nbar_chart\n```\n\n::: {.cell-output-display}\n![](project1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nregression_data <- fin_2019 %>%\n  select(Region, Overall_Points, General_Fund_Reserves_Points, Pension_Obligations_Points,\n         Debt_Burden_Points, OPEB_Funding_Points, Future_Pension_Costs_Points,\n         Liquidity_Points, Pension_Costs_Points)\n\nlong_data <- melt(regression_data, id.vars = c(\"Region\", \"Overall_Points\"))\n\nregression_plot <- ggplot(long_data, aes(x = value, y = Overall_Points, color = Region)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(group = Region)) +\n  facet_wrap(~variable, scales = \"free_x\") +\n  labs(title = \"Regression Lines for Overall Points by Region\",\n       x = \"Independent Variables\",\n       y = \"Overall Points\") +\n  theme_minimal()\n#ggsave(\"Regression_of_Region_by_Indicator.png\", plot = regression_plot, width = 8, height = 6)\nregression_plot\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](project1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrisk_levels <- c(\"low\", \"moderate\", \"high\")\nall_regions <- c(\"North\", \"Central\", \"South\")\n\n\npie_data <- fin_2019 %>%\n  group_by(Region, Risk_Level) %>%\n  summarise(Total_Risk = n(), .groups = \"drop\") %>%\n  group_by(Region) %>%\n  mutate(Percentage = Total_Risk / sum(Total_Risk) * 100) %>%\n  complete(Risk_Level = risk_levels, fill = list(Total_Risk = 0, Percentage = 0)) # \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrisk_colors <- c(\"Low\" = \"#A6CEE3\", \"Moderate\" = \"#FDBF6F\", \"High\" = \"#FB9A99\")\n\nnorth_pie <- ggplot(pie_data %>% filter(Region == \"North\"), aes(x = \"\", y = Percentage, fill = Risk_Level)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  labs(title = \"North Region Overall Risk\", x = NULL, y = NULL) +\n  theme_void() +\n  scale_fill_manual(values = risk_colors)\n\n\ncentral_pie <- ggplot(pie_data %>% filter(Region == \"Central\"), aes(x = \"\", y = Percentage, fill = Risk_Level)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  labs(title = \"Central Region Overall Risk\", x = NULL, y = NULL) +\n  theme_void() +\n  scale_fill_manual(values = risk_colors)\n\n\nsouth_pie <- ggplot(pie_data %>% filter(Region == \"South\"), aes(x = \"\", y = Percentage, fill = Risk_Level)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  labs(title = \"South Region Overall Risk\", x = NULL, y = NULL) +\n  theme_void() +\n  scale_fill_manual(values = risk_colors)\n\n\npie_plot <- grid.arrange(north_pie, central_pie, south_pie, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](project1_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"Regional_Risk_Distribution_by_Level.png\", plot = pie, width = 8, height = 6)\npie_plot\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTableGrob (1 x 3) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (1-1,3-3) arrange gtable[layout]\n```\n\n\n:::\n:::",
    "supporting": [
      "project1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}