---
title: "Data Analysis of California Fiscal Health in 2019"
---

```{r, warning=FALSE}
library(readr)
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyr)
library(gridExtra)

fin_2019 <- read_csv("fin_2019.csv")
fin_2019 <- fin_2019[fin_2019$Overall_Points != 0, ]
```

```{r}
summary_stats <- function(column) {
  mean_val <- mean(column, na.rm = TRUE)
  median_val <- median(column, na.rm = TRUE)
  lower_bound <- quantile(column, 0.25, na.rm = TRUE)
  upper_bound <- quantile(column, 0.75, na.rm = TRUE)
  return(c(mean = mean_val, median = median_val, lower_bound = lower_bound, upper_bound = upper_bound))
}

summary_stats(fin_2019$Overall_Points)
summary_stats(fin_2019$General_Fund_Reserves_Points)
summary_stats(fin_2019$Debt_Burden_Points)
summary_stats(fin_2019$Liquidity_Points)
summary_stats(fin_2019$Pension_Obligations_Points)
summary_stats(fin_2019$OPEB_Funding_Points)
summary_stats(fin_2019$Pension_Costs_Points)
summary_stats(fin_2019$Future_Pension_Costs_Points)
```

```{r}
# Divide into 3 regions
fin_2019$Region <- with(fin_2019, ifelse(
  Latitude >= 38, "North",
  ifelse(Latitude >= 35 & Latitude < 38, "Central", "South")
))
fin_2019$Region <- factor(fin_2019$Region, levels = c("North", "Central", "South"))
region_means <- fin_2019 %>%
  group_by(Region) %>%
  summarise(mean_overall_points = mean(Overall_Points, na.rm = TRUE))
```

```{r}
fin_2019 <- fin_2019 %>%
  mutate(
    Risk_Level = case_when(
      Overall_Risk == "High" ~ "High",
      Overall_Risk == "Moderate" ~ "Moderate",
      Overall_Risk == "Low" ~ "Low",
      TRUE ~ NA_character_
    ),
    Risk_Level = factor(Risk_Level, levels = c("High", "Moderate", "Low"))
  ) %>%
  filter(!is.na(Risk_Level))


california_map <- map_data("state") %>% filter(region == "california")

density_plot <- ggplot(fin_2019, aes(x = Longitude, y = Latitude)) +
  geom_polygon(data = california_map, aes(x = long, y = lat, group = group),
               fill = "lightgray", color = "black") + 
  stat_density2d(aes(fill = after_stat(level)), geom = "polygon", alpha = 0.5) +
  scale_fill_gradient(low = "yellow", high = "red") +
  labs(title = "Density of High-Risk Cities by Risk Level in 2019",
       x = "Longitude", y = "Latitude") +
  theme_minimal() +
  facet_wrap(~Risk_Level) +
  theme(
    #panel.background = element_rect(fill = "white", color = NA),
    #plot.background = element_rect(fill = "white", color = NA),
    #strip.text = element_text(size = 12, face = "bold")
  )

density_plot
```

```{r}
box_plot <- ggplot(fin_2019, aes(x = Region, y = Overall_Points, fill = Region)) +
  geom_boxplot(outlier.color = "red", outlier.size = 2) +
  geom_line(data = region_means, aes(x = Region, y = mean_overall_points, group = 1), 
            color = "pink", size = 1) +
  geom_point(data = region_means, aes(x = Region, y = mean_overall_points), 
             color = "pink", size = 3) +
  labs(title = "Overall Points by Region with Mean Line",
       x = "Region",
       y = "Overall Points") +
  theme_minimal(base_size = 14) +
  scale_fill_manual(values = c("skyblue", "lightgreen", "orange")) +
  theme(legend.position = "none")
#ggsave("Boxplot_of_Overall_Points_by_Region.png", plot = box_plot, width = 8, height = 6)
box_plot
```

```{r}
region_means <- fin_2019 %>%
  group_by(Region) %>%
  summarise(across(c(General_Fund_Reserves_Points, Pension_Obligations_Points,
                     Debt_Burden_Points, OPEB_Funding_Points, Future_Pension_Costs_Points,
                     Liquidity_Points, Pension_Costs_Points), mean, na.rm = TRUE))

long_data <- melt(region_means, id.vars = "Region")

bar_chart <- ggplot(long_data, aes(x = Region, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparison of Scores by Region",
       x = "Region", y = "Average Points") +
  theme_minimal()
#ggsave("Bar_Chart_of_Regional_Average_Scores_by_Indicator.png", plot = bar_chart, width = 8, height = 6)
bar_chart
```

```{r}
regression_data <- fin_2019 %>%
  select(Region, Overall_Points, General_Fund_Reserves_Points, Pension_Obligations_Points,
         Debt_Burden_Points, OPEB_Funding_Points, Future_Pension_Costs_Points,
         Liquidity_Points, Pension_Costs_Points)

long_data <- melt(regression_data, id.vars = c("Region", "Overall_Points"))

regression_plot <- ggplot(long_data, aes(x = value, y = Overall_Points, color = Region)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, aes(group = Region)) +
  facet_wrap(~variable, scales = "free_x") +
  labs(title = "Regression Lines for Overall Points by Region",
       x = "Independent Variables",
       y = "Overall Points") +
  theme_minimal()
#ggsave("Regression_of_Region_by_Indicator.png", plot = regression_plot, width = 8, height = 6)
regression_plot
```

```{r}
risk_levels <- c("low", "moderate", "high")
all_regions <- c("North", "Central", "South")


pie_data <- fin_2019 %>%
  group_by(Region, Risk_Level) %>%
  summarise(Total_Risk = n(), .groups = "drop") %>%
  group_by(Region) %>%
  mutate(Percentage = Total_Risk / sum(Total_Risk) * 100) %>%
  complete(Risk_Level = risk_levels, fill = list(Total_Risk = 0, Percentage = 0)) # 
```

```{r}
risk_colors <- c("Low" = "#A6CEE3", "Moderate" = "#FDBF6F", "High" = "#FB9A99")

north_pie <- ggplot(pie_data %>% filter(Region == "North"), aes(x = "", y = Percentage, fill = Risk_Level)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  labs(title = "North Region Overall Risk", x = NULL, y = NULL) +
  theme_void() +
  scale_fill_manual(values = risk_colors)


central_pie <- ggplot(pie_data %>% filter(Region == "Central"), aes(x = "", y = Percentage, fill = Risk_Level)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  labs(title = "Central Region Overall Risk", x = NULL, y = NULL) +
  theme_void() +
  scale_fill_manual(values = risk_colors)


south_pie <- ggplot(pie_data %>% filter(Region == "South"), aes(x = "", y = Percentage, fill = Risk_Level)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  labs(title = "South Region Overall Risk", x = NULL, y = NULL) +
  theme_void() +
  scale_fill_manual(values = risk_colors)


pie_plot <- grid.arrange(north_pie, central_pie, south_pie, ncol = 3)
#ggsave("Regional_Risk_Distribution_by_Level.png", plot = pie, width = 8, height = 6)
pie_plot
```